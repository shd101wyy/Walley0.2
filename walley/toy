#!/usr/bin/env python
from toy import *
import sys
print sys.argv

# toy language simple repl
def repl(prompt="toy > ",env=[]):
        input_str = raw_input(prompt)
        tree = parser(lexer(input_str)[0])
        if tree==["exit"]:
            return
        else:
            return_obj = toy(tree,env,"")
            print return_obj[0]
                            # new environment
            repl("toy > ",return_obj[1])
        #print global_env

# COMMANDS
# fix /t problem
def cleanString(input_str):
    count_of_double_quote = 0
    output = ""
    i=0
    while i<len(input_str):
        if input_str[i]=="\"":
            count_of_double_quote = count_of_double_quote + 1
        if count_of_double_quote%2==0 and (input_str[i]=="\t"):
            output = output+ " "
            i=i+1
            continue
        output = output+input_str[i]
        i=i+1
    return output
# run one file
if len(sys.argv)==2:
    file_name=sys.argv[1]
    file=open(file_name)
    string_in_side = file.read()
    string_in_side = "(begin "+string_in_side+")"
    string_in_side = cleanString(string_in_side)
    
    x=lexer(string_in_side)
    if x[1]==False:
        print "Incomplete Statement"
        exit(0)
    x=parser(x[0])
    toy(x,[],"")
    

# run one file and print env
elif len(sys.argv)==3 and sys.argv[1]=="env":
    file_name=sys.argv[2]
    file=open(file_name)
    string_in_side = file.read()
    string_in_side = "(begin "+string_in_side+")"
    string_in_side = cleanString(string_in_side)
    
    x=lexer(string_in_side)
    if x[1]==False:
        print "Incomplete Statement"
        exit(0)
    x=parser(x[0])
    env = toy(x,[],"")[1]
    print env

# compress file
elif len(sys.argv)==3 and sys.argv[1]=="compress":
    file_name=sys.argv[2]
    file=open(file_name)
    string_in_side = file.read()
    string_in_side = cleanString(string_in_side)

    x = lexer(string_in_side)[0]
    if x[1]==False:
        print "Incomplete Statement\nCannot compress file "+file_name
        exit(0)
    i=0
    output = ""
    length = len(x)
    while i<length:
        if x[i]=="(":
            output = output+"("
            i=i+1
            continue
        else:
            # deal with string problem
            if x[i][0]=="\"":
                x[i]="\\"+x[i]
                x[i]=x[i][0:len(x[i])-1]
                x[i]=x[i]+"\\\""
            output=output+x[i]
            if i+1!=length and x[i+1]==")":
                i=i+1
            else:
                output=output+" "
                i=i+1
    print "====================\n\n\n"
    print output

# compress file and print array (list)
elif len(sys.argv)==3 and sys.argv[1]=="compress2":
    file_name=sys.argv[2]
    file=open(file_name)
    string_in_side = file.read()
    string_in_side = cleanString(string_in_side)

    x = lexer(string_in_side)[0]
    print parser(x)


elif len(sys.argv)==1:
    print "Toy Language >>>>>>>>>>>>>>>"
    print "Press ctrl+C or Type (exit) to quit\n"
    repl()
else:
    print "Argv Error.."


