
(begin
	(define abs (lambda (a) 
		(cond 
			((< a 0) (- 0 a)) 
			(1 a)
			)
		)
	)
	; test absolute
	;(display (abs -12))

	; factorial
	(define factorial (lambda (x)
		(define factorial_iter (lambda (outcome count)
		 	(if (== count 1) outcome (factorial_iter (* outcome (- count 1)) (- count 1)))
			;(cond ((== count 1) outcome) (1 (factorial_iter (* outcome (- count 1)) (- count 1))))
			)
		)
		(factorial_iter x x)
		))
	(display (factorial 10))
)








